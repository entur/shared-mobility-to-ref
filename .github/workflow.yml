name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  JVM_OPTS: -Xmx3200m
  TERM: dumb

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Gradle Dependencies
        run: ./gradlew dependencies

      - name: Set execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Check Kotlin code formatting with ktlint
        run: ./gradlew ktlintCheck

      - name: Build the JAR file
        run: ./gradlew build

      - name: Running tests
        run: ./gradlew test

      - name: Create new image version
        id: create_version
        run: |
          echo "VERSION=${GITHUB_REF_NAME}-v${GITHUB_RUN_NUMBER}-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "${{ env.VERSION }}" > version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GCR
        run: echo "${{ secrets.GCR_JSON_KEY }}" | docker login -u _json_key --password-stdin https://eu.gcr.io

      - name: Replace slashes in VERSION
        run: |
          echo "Original VERSION: $VERSION"
          VERSION=${VERSION//\//_}
          echo "Modified VERSION: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Docker build only
        run: |
          IMAGE="eu.gcr.io/entur-system-1287/${{ github.event.repository.name }}"
          docker build -t $IMAGE .

      - name: Tag git version only on main
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag $VERSION
          git push origin $VERSION

      - name: Upload artifacts to workspace
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: |
            build
            Dockerfile
            .github
            version

  deploy-docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download workspace artifacts
        uses: actions/download-artifact@v3
        with:
          name: workspace

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GCR
        run: echo "${{ secrets.GCR_JSON_KEY }}" | docker login -u _json_key --password-stdin https://eu.gcr.io

      - name: Read image version from file
        run: |
          VERSION=$(cat ./version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Replace slashes in VERSION
        run: |
          echo "Original VERSION: $VERSION"
          VERSION=${VERSION//\//_}
          echo "Modified VERSION: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Docker build, tag and push
        run: |
          IMAGE="eu.gcr.io/entur-system-1287/${{ github.event.repository.name }}"
          docker build -t $IMAGE .
          docker tag $IMAGE:$VERSION $IMAGE:$VERSION
          docker push $IMAGE:$VERSION
